{"version":3,"sources":["services/userAPI.js","components/Loading.js","components/Header.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","pages/Album.js","pages/Favorites.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","components/AlbumCard.js","services/searchAlbumsAPI.js","pages/Search.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","className","Component","Header","state","loading","a","this","setState","userImg","to","size","src","alt","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","target","props","track","toggleLoadingHandler","updateHandler","wasChecked","checked","currentTarget","songContainer","document","querySelector","getComputedStyle","justifyContent","classList","add","currentActive","remove","previousSibling","pause","nextSibling","play","favoritesList","showArtwork","trackName","previewUrl","artworkUrl30","collectionName","trackNumber","onClick","event","showAudio","controls","kind","htmlFor","id","type","onChange","handleFavorite","some","defaultProps","getMusics","fetch","request","json","requestJson","results","Album","musicList","toggleLoading","bind","updateFavoriteSongs","retrieveAlbumTime","match","params","console","log","currentState","url","replace","songsList","_song","index","accTime","Date","reduce","accum","trackTimeMillis","millisToHour","hours","Math","floor","minutes","seconds","artworkUrl100","artistName","primaryGenreName","releaseDate","trackCount","convertArtworkSize","split","map","Favorites","length","Login","isButtonDisabled","isLoggedIn","value","preventDefault","handleChange","placeholder","handleSubmit","disabled","NotFound","Profile","userName","userEmail","userBio","ProfileEdit","isInfoSaved","validateButton","newInfo","isFormFilled","isEmailValid","test","AlbumCard","album","collectionId","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","Search","artistSearched","albumsList","currentArtistName","albums","handleSearch","App","path","render","component","exact","React","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.02aa5b17.chunk.js","sourcesContent":["const USER_KEY = 'user';\r\nconst TIMEOUT = 1500;\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\r\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso mais futuramente\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => {\r\n  setTimeout(() => {\r\n    callback(response);\r\n  }, TIMEOUT);\r\n};\r\n\r\nexport const getUser = () => new Promise((resolve) => {\r\n  let user = readUser();\r\n  if (user === null) {\r\n    user = {};\r\n  }\r\n  simulateRequest(user)(resolve);\r\n});\r\n\r\nexport const createUser = (user) => new Promise((resolve) => {\r\n  const emptyUser = {\r\n    name: '',\r\n    email: '',\r\n    image: '',\r\n    description: '',\r\n  };\r\n  saveUser({ ...emptyUser, ...user });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\r\n  saveUser({ ...updatedUser });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","import React, { Component } from 'react';\r\nimport './Loading.css';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <p className=\"loading\">Carregando...</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { FaHeadphones } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUser } from '../services/userAPI';\r\nimport './Header.css';\r\nimport Loading from './Loading';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      user: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await getUser();\r\n    this.setState({\r\n      loading: false,\r\n      user: user.name,\r\n      userImg: user.image,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loading, user, userImg } = this.state;\r\n    return (\r\n      <header data-testid=\"header-component\">\r\n        <Link to=\"/\">\r\n          <h1 className=\"header-logo\">\r\n            <FaHeadphones size=\"2rem\" />\r\n            TrybeTunes\r\n          </h1>\r\n        </Link>\r\n        <div className=\"header-right\">\r\n          <div className=\"header-profileContainer\">\r\n            { loading\r\n              ? (\r\n                <>\r\n                  <img\r\n                    className=\"header-profile-img\"\r\n                    src=\"./images/default-profile.jpeg\"\r\n                    alt=\"\"\r\n                  />\r\n                  <Loading />\r\n                </>)\r\n              : (\r\n                <>\r\n                  <img className=\"header-profile-img\" src={ userImg } alt=\"\" />\r\n                  <p data-testid=\"header-user-name\">{user}</p>\r\n                </>\r\n              )}\r\n          </div>\r\n          <nav>\r\n            <Link to=\"/search\" data-testid=\"link-to-search\">Pesquisa</Link>\r\n            <Link to=\"/favorites\" data-testid=\"link-to-favorites\">Favoritas</Link>\r\n            <Link to=\"/profile\" data-testid=\"link-to-profile\">Perfil</Link>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\r\nconst TIMEOUT = 500;\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\r\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\r\n}\r\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\r\n\r\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\r\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso futuramente.\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => {\r\n  setTimeout(() => {\r\n    callback(response);\r\n  }, TIMEOUT);\r\n};\r\n\r\nexport const getFavoriteSongs = () => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  simulateRequest(favoriteSongs)(resolve);\r\n});\r\n\r\nexport const addSong = (song) => new Promise((resolve) => {\r\n  if (song) {\r\n    const favoriteSongs = readFavoriteSongs();\r\n    saveFavoriteSongs([...favoriteSongs, song]);\r\n  }\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const removeSong = (song) => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { BsPlayCircle } from 'react-icons/bs';\r\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\r\nimport './MusicCard.css';\r\n\r\nclass MusicCard extends Component {\r\n  async handleFavorite({ target }) {\r\n    const { track, toggleLoadingHandler, updateHandler } = this.props;\r\n    const wasChecked = !target.checked;\r\n    toggleLoadingHandler();\r\n    if (wasChecked) {\r\n      await removeSong(track);\r\n    } else {\r\n      await addSong(track);\r\n    }\r\n    await updateHandler();\r\n    toggleLoadingHandler();\r\n  }\r\n\r\n  showAudio({ currentTarget }) {\r\n    const songContainer = document.querySelector('.songContainer');\r\n    const isMobile = getComputedStyle(songContainer).justifyContent === 'space-between';\r\n    if (!isMobile) {\r\n      currentTarget.classList.add('display-none');\r\n    }\r\n    const currentActive = document.querySelector('.active');\r\n    if (currentActive) {\r\n      currentActive.classList.remove('active');\r\n      currentActive.previousSibling.classList.remove('display-none');\r\n      currentActive.pause();\r\n    }\r\n    currentTarget.nextSibling.classList.add('active');\r\n    currentTarget.nextSibling.play();\r\n  }\r\n\r\n  render() {\r\n    const { track, favoritesList, showArtwork } = this.props;\r\n    const { trackName, trackId, previewUrl,\r\n      artworkUrl30, collectionName, trackNumber } = track;\r\n    return (\r\n      <div className=\"songContainer\">\r\n        {showArtwork\r\n          && <img src={ artworkUrl30 } alt={ collectionName } className=\"songcard-img\" />}\r\n        {!showArtwork && <span>{trackNumber}</span> }\r\n        <h4>{trackName}</h4>\r\n        <BsPlayCircle size=\"1.6em\" onClick={ (event) => this.showAudio(event) } />\r\n        <audio\r\n          className=\"hidden\"\r\n          data-testid=\"audio-component\"\r\n          src={ previewUrl }\r\n          controls\r\n        >\r\n          <track kind=\"captions\" />\r\n          O seu navegador não suporta o elemento\r\n          {' '}\r\n          <code>audio</code>\r\n          .\r\n        </audio>\r\n        <label htmlFor={ `check-${trackId}` }>\r\n          <input\r\n            id={ `check-${trackId}` }\r\n            type=\"checkbox\"\r\n            className=\"favoriteCheck\"\r\n            data-testid={ `checkbox-music-${trackId}` }\r\n            onChange={ (event) => this.handleFavorite(event, trackId) }\r\n            checked={ favoritesList.some((song) => song.trackId === trackId) }\r\n          />\r\n          Favorita\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMusicCard.defaultProps = {\r\n  showArtwork: false,\r\n};\r\n\r\nMusicCard.propTypes = {\r\n  track: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  toggleLoadingHandler: PropTypes.func.isRequired,\r\n  updateHandler: PropTypes.func.isRequired,\r\n  favoritesList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  showArtwork: PropTypes.bool,\r\n};\r\n\r\nexport default MusicCard;\r\n","const getMusics = async (id) => {\r\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\r\n  const requestJson = await request.json();\r\n  return requestJson.results;\r\n};\r\n\r\nexport default getMusics;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport MusicCard from '../components/MusicCard';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport getMusics from '../services/musicsAPI';\r\nimport './Album.css';\r\n\r\nclass Album extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      musicList: [],\r\n      loading: true,\r\n      favoritesList: [],\r\n    };\r\n\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\r\n    this.retrieveAlbumTime = this.retrieveAlbumTime.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    const { id } = match.params;\r\n    const musicList = await getMusics(id);\r\n    this.setState({\r\n      musicList,\r\n      loading: false,\r\n    });\r\n    console.log(musicList);\r\n    this.updateFavoriteSongs();\r\n  }\r\n\r\n  async updateFavoriteSongs() {\r\n    const favoriteSongs = await getFavoriteSongs();\r\n    this.setState({\r\n      favoritesList: favoriteSongs,\r\n    });\r\n  }\r\n\r\n  toggleLoading() {\r\n    this.setState((currentState) => ({\r\n      loading: !currentState.loading,\r\n    }));\r\n  }\r\n\r\n  convertArtworkSize(url = '') {\r\n    return url.replace(/100x100bb.jpg/, '300x300bb.jpg');\r\n  }\r\n\r\n  retrieveAlbumTime() {\r\n    const { musicList } = this.state;\r\n    const songsList = musicList.filter((_song, index) => index > 0);\r\n    const accTime = new Date(\r\n      songsList.reduce((accum, song) => accum + song.trackTimeMillis, 0),\r\n    );\r\n    const millisToHour = 3600000;\r\n    const millisToMinute = 60000;\r\n    const millisToSecond = 1000;\r\n    const hours = Math.floor(accTime / millisToHour);\r\n    const minutes = Math.floor((accTime % millisToHour) / millisToMinute);\r\n    const seconds = Math\r\n      .floor(((accTime % millisToHour) % millisToMinute) / millisToSecond);\r\n    return `${hours > 0 ? `${hours}h` : ''} \\\r\n    ${minutes > 0 ? `${minutes}min` : ''} ${hours > 0 ? '' : `${seconds}s`}`;\r\n  }\r\n\r\n  render() {\r\n    const { musicList, loading, favoritesList } = this.state;\r\n    const { artworkUrl100, artistName, collectionName,\r\n      primaryGenreName, releaseDate, trackCount } = musicList[0] || {};\r\n    return (\r\n      <div data-testid=\"page-album\">\r\n        <Header />\r\n        <div className=\"albumContainer\">\r\n          {loading ? <Loading /> : (\r\n            <>\r\n              <div className=\"albumHeader\">\r\n                <img src={ this.convertArtworkSize(artworkUrl100) } alt=\"\" />\r\n                <div className=\"albumInfo\">\r\n                  <h3 data-testid=\"artist-name\">{artistName}</h3>\r\n                  <h2 data-testid=\"album-name\">{collectionName}</h2>\r\n                  <div className=\"additionalInfo\">\r\n                    <span>{primaryGenreName}</span>\r\n                    <span>{releaseDate.split('-')[0]}</span>\r\n                    <span>\r\n                      {`${trackCount} ${trackCount > 1 ? 'músicas' : 'música'}`}\r\n                    </span>\r\n                    <span>\r\n                      {this.retrieveAlbumTime()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"songsListContainer\">\r\n                {musicList.map((track, index) => (\r\n                  index > 0 && <MusicCard\r\n                    track={ track }\r\n                    key={ track.trackId }\r\n                    toggleLoadingHandler={ this.toggleLoading }\r\n                    favoritesList={ favoritesList }\r\n                    updateHandler={ this.updateFavoriteSongs }\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport MusicCard from '../components/MusicCard';\r\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\r\nimport './Favorites.css';\r\n\r\nclass Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      favoritesList: [],\r\n    };\r\n\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true }, async () => {\r\n      const favoritesList = await getFavoriteSongs();\r\n      this.setState({\r\n        loading: false,\r\n        favoritesList });\r\n    });\r\n  }\r\n\r\n  toggleLoading() {\r\n    this.setState((currentState) => ({\r\n      loading: !currentState.loading,\r\n    }));\r\n  }\r\n\r\n  async updateFavoriteSongs() {\r\n    console.log('oi');\r\n    const favoriteSongs = await getFavoriteSongs();\r\n    this.setState({\r\n      favoritesList: favoriteSongs,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { favoritesList, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-favorites\">\r\n        <Header />\r\n        <div className=\"favoritesContainer\">\r\n          {loading\r\n            ? <Loading />\r\n            : (\r\n              <>\r\n                {favoritesList.map((song) => (\r\n                  <MusicCard\r\n                    track={ song }\r\n                    key={ song.trackId }\r\n                    favoritesList={ favoritesList }\r\n                    toggleLoadingHandler={ this.toggleLoading }\r\n                    updateHandler={ this.updateFavoriteSongs }\r\n                    showArtwork\r\n                  />))}\r\n                {!favoritesList.length && <p>Nenhuma música favoritada</p>}\r\n              </>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport { FaHeadphones } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Loading from '../components/Loading';\r\nimport { createUser } from '../services/userAPI';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      isButtonDisabled: true,\r\n      isLoggedIn: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    const minLength = 3;\r\n    this.setState(() => ({\r\n      name: target.value,\r\n      isButtonDisabled: target.value.length < minLength,\r\n    }));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { name } = this.state;\r\n    event.preventDefault();\r\n    this.setState({\r\n      loading: true,\r\n    }, async () => {\r\n      await createUser({ name, image: './images/default-profile.jpeg' });\r\n      this.setState({\r\n        loading: false,\r\n        isLoggedIn: true,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, isButtonDisabled, isLoggedIn, loading } = this.state;\r\n    return (\r\n      <div className=\"loginContainer\">\r\n        {/* <img src=\"./trybetunes/images/logo-trybetunes.png\" alt=\"\" className=\"logo\" /> */}\r\n        <h1 className=\"logo\">\r\n          <FaHeadphones size=\"2rem\" />\r\n          TrybeTunes\r\n        </h1>\r\n        <div data-testid=\"page-login\" className=\"loginFormContainer\">\r\n          {loading === true\r\n            ? <Loading />\r\n            : (\r\n              <form>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                  data-testid=\"login-name-input\"\r\n                  value={ name }\r\n                  placeholder=\"Nome\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  onClick={ (event) => this.handleSubmit(event) }\r\n                  data-testid=\"login-submit-button\"\r\n                  disabled={ isButtonDisabled }\r\n                >\r\n                  Entrar\r\n                </button>\r\n              </form>\r\n            )}\r\n          {isLoggedIn && <Redirect to=\"/search\" />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div data-testid=\"page-not-found\">NotFound</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport { getUser } from '../services/userAPI';\r\nimport './Profile.css';\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: '',\r\n      userEmail: '',\r\n      userBio: '',\r\n      userImg: '',\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true }, async () => {\r\n      const user = await getUser();\r\n      this.setState({\r\n        userName: user.name,\r\n        userEmail: user.email,\r\n        userBio: user.description,\r\n        userImg: user.image,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { userName, userEmail, userBio, userImg, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-profile\">\r\n        <Header />\r\n        <div className=\"profileContainer\">\r\n          { loading ? <Loading /> : (\r\n            <>\r\n              <div className=\"profile-row\">\r\n                <img\r\n                  src={ userImg }\r\n                  className=\"profile-img\"\r\n                  alt=\"\"\r\n                  data-testid=\"profile-image\"\r\n                />\r\n                <Link to=\"/profile/edit\" className=\"edit-btn\">Editar perfil</Link>\r\n              </div>\r\n              <h4>Nome</h4>\r\n              <p>{userName}</p>\r\n              <h4>E-mail</h4>\r\n              <p>{userEmail || 'Nenhum e-mail cadastrado'}</p>\r\n              <h4>Descrição</h4>\r\n              <p>{userBio || 'Nenhuma descrição cadastrada'}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport { getUser, updateUser } from '../services/userAPI';\r\nimport './ProfileEdit.css';\r\n\r\nclass ProfileEdit extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: '',\r\n      userEmail: '',\r\n      userBio: '',\r\n      userImg: '',\r\n      loading: false,\r\n      isButtonDisabled: true,\r\n      isInfoSaved: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true }, async () => {\r\n      const user = await getUser();\r\n      this.setState({\r\n        userName: user.name,\r\n        userEmail: user.email,\r\n        userBio: user.description,\r\n        userImg: user.image,\r\n        loading: false,\r\n      }, this.validateButton);\r\n    });\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    }, this.validateButton);\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    const { userName, userEmail, userBio, userImg } = this.state;\r\n    const newInfo = {\r\n      name: userName,\r\n      email: userEmail,\r\n      description: userBio,\r\n      image: userImg,\r\n    };\r\n    event.preventDefault();\r\n    this.setState({ loading: true }, async () => {\r\n      await updateUser(newInfo);\r\n      this.setState({ isInfoSaved: true });\r\n    });\r\n  }\r\n\r\n  validateButton() {\r\n    const { userName, userEmail, userBio, userImg } = this.state;\r\n    const isFormFilled = userName.length > 0\r\n      && userEmail.length > 0 && userBio.length > 0 && userImg.length > 0;\r\n    const emailFormat = /[a-zA-Z0-9._]+@[a-zA-Z]+\\.[a-zA-Z.]*\\w$/;\r\n    const isEmailValid = emailFormat.test(userEmail);\r\n    this.setState({\r\n      isButtonDisabled: !(isEmailValid && isFormFilled),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { userName, userEmail, userBio, userImg,\r\n      loading, isButtonDisabled, isInfoSaved } = this.state;\r\n    return (\r\n      <div data-testid=\"page-profile-edit\">\r\n        <Header />\r\n        <div className=\"profileEditContainer\">\r\n          { loading ? <Loading /> : (\r\n            <form>\r\n              <label htmlFor=\"inputName\">\r\n                Nome\r\n                <input\r\n                  type=\"text\"\r\n                  value={ userName }\r\n                  name=\"userName\"\r\n                  id=\"inputName\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                  data-testid=\"edit-input-name\"\r\n                />\r\n              </label>\r\n              <label htmlFor=\"inputEmail\">\r\n                E-mail\r\n                <input\r\n                  type=\"email\"\r\n                  value={ userEmail }\r\n                  name=\"userEmail\"\r\n                  id=\"inputEmail\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                  data-testid=\"edit-input-email\"\r\n                />\r\n              </label>\r\n              <label htmlFor=\"inputBio\">\r\n                Descrição\r\n                <input\r\n                  type=\"text\"\r\n                  value={ userBio }\r\n                  name=\"userBio\"\r\n                  id=\"inputBio\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                  data-testid=\"edit-input-description\"\r\n                />\r\n              </label>\r\n              <label htmlFor=\"inputImg\">\r\n                Imagem de usuário\r\n                <input\r\n                  type=\"text\"\r\n                  data-testid=\"edit-input-image\"\r\n                  value={ userImg }\r\n                  name=\"userImg\"\r\n                  id=\"inputImg\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                />\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                data-testid=\"edit-button-save\"\r\n                disabled={ isButtonDisabled }\r\n                onClick={ (event) => this.handleSubmit(event) }\r\n              >\r\n                Enviar\r\n\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n        {isInfoSaved && <Redirect to=\"/profile\" />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './AlbumCard.css';\r\n\r\nclass AlbumCard extends Component {\r\n  render() {\r\n    const { album } = this.props;\r\n    const { artworkUrl100, collectionName, artistName, collectionId } = album;\r\n\r\n    return (\r\n      <Link\r\n        to={ `/album/${collectionId}` }\r\n        data-testid={ `link-to-album-${collectionId}` }\r\n        className=\"card\"\r\n      >\r\n        <img src={ artworkUrl100.replace(/100x100bb.jpg/, '300x300bb.jpg') } alt=\"\" />\r\n        <h3 className=\"albumTitle\">{collectionName}</h3>\r\n        <p className=\"artistName\">{artistName}</p>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nAlbumCard.propTypes = {\r\n  album: PropTypes.objectOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default AlbumCard;\r\n","const searchAlbumsAPI = async (artist) => {\r\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\r\n\r\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\r\n\r\n  const APIResponse = await fetch(getAlbumsAPI);\r\n\r\n  const { results } = await APIResponse.json();\r\n\r\n  const response = results.map(\r\n    ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }) => ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default searchAlbumsAPI;\r\n","import React, { Component } from 'react';\r\nimport AlbumCard from '../components/AlbumCard';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      artistName: '',\r\n      artistSearched: '',\r\n      isButtonDisabled: true,\r\n      loading: true,\r\n      albumsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    const minLength = 2;\r\n    this.setState({\r\n      artistName: target.value,\r\n      isButtonDisabled: target.value.length < minLength,\r\n    });\r\n  }\r\n\r\n  handleSearch(event) {\r\n    const { artistName } = this.state;\r\n    const currentArtistName = artistName;\r\n    event.preventDefault();\r\n    this.setState({\r\n      artistName: '',\r\n      loading: true,\r\n    }, async () => {\r\n      const albums = await searchAlbumsAPI(currentArtistName);\r\n      this.setState({\r\n        loading: false,\r\n        artistSearched: currentArtistName,\r\n        albumsList: albums,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { artistName, artistSearched, albumsList,\r\n      isButtonDisabled, loading } = this.state;\r\n    return (\r\n      <div data-testid=\"page-search\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          {loading ? <Loading /> : (\r\n            <div className=\"searchContainer\">\r\n              <form>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={ (event) => this.handleChange(event) }\r\n                  value={ artistName }\r\n                  className=\"searchArtistInput\"\r\n                  data-testid=\"search-artist-input\"\r\n                  placeholder=\"Nome do artista\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={ isButtonDisabled }\r\n                  data-testid=\"search-artist-button\"\r\n                  onClick={ (event) => this.handleSearch(event) }\r\n                >\r\n                  Pesquisar\r\n                </button>\r\n              </form>\r\n              {artistSearched && (\r\n                <p>\r\n                  {`Resultado de álbuns de: ${artistSearched}`}\r\n                </p>\r\n              )}\r\n              {!albumsList.length && artistSearched\r\n                ? <p>Nenhum álbum foi encontrado</p>\r\n                : (\r\n                  <div className=\"cardsContainer\">\r\n                    {albumsList.map(\r\n                      (album) => <AlbumCard album={ album } key={ album.collectionId } />,\r\n                    )}\r\n                  </div>\r\n                )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Album from './pages/Album';\r\nimport Favorites from './pages/Favorites';\r\nimport Login from './pages/Login';\r\nimport NotFound from './pages/NotFound';\r\nimport Profile from './pages/Profile';\r\nimport ProfileEdit from './pages/ProfileEdit';\r\nimport Search from './pages/Search';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            path=\"/album/:id\"\r\n            render={ (props) => (\r\n              <Album { ...props } />) }\r\n          />\r\n          <Route path=\"/search\" component={ Search } />\r\n          <Route path=\"/favorites\" component={ Favorites } />\r\n          <Route path=\"/profile\" component={ Profile } exact />\r\n          <Route path=\"/profile/edit\" component={ ProfileEdit } exact />\r\n          <Route path=\"/\" component={ Login } exact />\r\n          <Route path=\"/*\" component={ NotFound } />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}